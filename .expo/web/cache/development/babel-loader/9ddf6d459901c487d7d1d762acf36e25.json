{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Avatar, ListItem, Icon } from \"react-native-elements\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RideHistoryScreen = function (_Component) {\n  _inherits(RideHistoryScreen, _Component);\n\n  var _super = _createSuper(RideHistoryScreen);\n\n  function RideHistoryScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RideHistoryScreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      var email;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _this.state.email;\n\n              _this.getTransactions(email);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getTransactions = function (email) {\n      db.collection(\"transactions\").where(\"email_id\", \"==\", email).limit(10).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n            lastVisibleTransaction: doc\n          });\n        });\n      });\n    };\n\n    _this.handleSearch = function _callee2(bikeId, email) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              bikeId = bikeId.toUpperCase().trim();\n\n              _this.setState({\n                allTransactions: []\n              });\n\n              if (!bikeId) {\n                _this.getTransactions(email);\n              }\n\n              db.collection(\"transactions\").where(\"bike_id\", \"==\", bikeId).where(\"email_id\", \"==\", email).get().then(function (snapshot) {\n                snapshot.docs.map(function (doc) {\n                  _this.setState({\n                    allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                    lastVisibleTransaction: doc\n                  });\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.fetchMoreTransactions = function _callee3(bikeId, email) {\n      var _this$state, lastVisibleTransaction, allTransactions, query;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              bikeId = bikeId.toUpperCase().trim();\n              _this$state = _this.state, lastVisibleTransaction = _this$state.lastVisibleTransaction, allTransactions = _this$state.allTransactions;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bike_id\", \"==\", bikeId).where(\"email_id\", \"==\", email).startAfter(lastVisibleTransaction).limit(10).get());\n\n            case 4:\n              query = _context3.sent;\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      var date = item.date.toDate().toString().split(\" \").splice(0, 4).join(\" \");\n      var transactionType = item.transaction_type === \"rented\" ? \"rented\" : \"returned\";\n      return _jsx(View, {\n        style: {\n          borderWidth: 1\n        },\n        children: _jsxs(ListItem, {\n          bottomDivider: true,\n          children: [_jsx(Icon, {\n            type: \"ionicon\",\n            name: \"bicycle\",\n            size: 40\n          }), _jsxs(ListItem.Content, {\n            children: [_jsx(ListItem.Title, {\n              style: styles.title,\n              children: item.bike_type + \" ( \" + item.bike_id + \" )\"\n            }), _jsx(ListItem.Subtitle, {\n              style: styles.subtitle,\n              children: \"This bike is \" + transactionType + \" by you.\"\n            }), _jsxs(View, {\n              style: styles.lowerLeftContaiiner,\n              children: [_jsxs(View, {\n                style: styles.transactionContainer,\n                children: [_jsx(Text, {\n                  style: [styles.transactionText, {\n                    color: item.transaction_type === \"rented\" ? \"#78D304\" : \"#0364F4\"\n                  }],\n                  children: item.transaction_type.charAt(0).toUpperCase() + item.transaction_type.slice(1)\n                }), _jsx(Icon, {\n                  type: \"ionicon\",\n                  name: item.transaction_type === \"rented\" ? \"checkmark-circle-outline\" : \"arrow-redo-circle-outline\",\n                  color: item.transaction_type === \"rented\" ? \"#78D304\" : \"#0364F4\"\n                })]\n              }), _jsx(Text, {\n                style: styles.date,\n                children: date\n              })]\n            })]\n          })]\n        }, i)\n      });\n    };\n\n    _this.state = {\n      allTransactions: [],\n      lastVisibleTransaction: null,\n      searchText: \"\",\n      email: firebase.auth().currentUser.email\n    };\n    return _this;\n  }\n\n  _createClass(RideHistoryScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          searchText = _this$state2.searchText,\n          allTransactions = _this$state2.allTransactions,\n          email = _this$state2.email;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.upperContainer,\n          children: _jsxs(View, {\n            style: styles.textinputContainer,\n            children: [_jsx(TextInput, {\n              style: styles.textinput,\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  searchText: text\n                });\n              },\n              placeholder: \"Type here\",\n              placeholderTextColor: \"#FFFFFF\"\n            }), _jsx(TouchableOpacity, {\n              style: styles.scanbutton,\n              onPress: function onPress() {\n                return _this2.handleSearch(searchText, email);\n              },\n              children: _jsx(Text, {\n                style: styles.scanbuttonText,\n                children: \"Search\"\n              })\n            })]\n          })\n        }), _jsx(View, {\n          style: styles.lowerContainer,\n          children: _jsx(FlatList, {\n            data: allTransactions,\n            renderItem: this.renderItem,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            },\n            onEndReached: function onEndReached() {\n              return _this2.fetchMoreTransactions(searchText, email);\n            },\n            onEndReachedThreshold: 0.7\n          })\n        })]\n      });\n    }\n  }]);\n\n  return RideHistoryScreen;\n}(Component);\n\nexport { RideHistoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  upperContainer: {\n    flex: 0.2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#4C5D70\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#F88379\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerContainer: {\n    flex: 0.8,\n    backgroundColor: \"#FBE5C0\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  subtitle: {\n    fontSize: 16,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerLeftContaiiner: {\n    alignSelf: \"flex-end\",\n    marginTop: -40\n  },\n  transactionContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  transactionText: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  date: {\n    fontSize: 12,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/adaar/OneDrive/Desktop/White Hat Junior/Project-75/screens/RideHistory.js"],"names":["React","Component","Avatar","ListItem","Icon","firebase","db","RideHistoryScreen","props","componentDidMount","email","state","getTransactions","collection","where","limit","get","then","snapshot","docs","map","doc","setState","allTransactions","data","lastVisibleTransaction","handleSearch","bikeId","toUpperCase","trim","fetchMoreTransactions","startAfter","query","renderItem","item","i","date","toDate","toString","split","splice","join","transactionType","transaction_type","borderWidth","styles","title","bike_type","bike_id","subtitle","lowerLeftContaiiner","transactionContainer","transactionText","color","charAt","slice","searchText","auth","currentUser","container","upperContainer","textinputContainer","textinput","text","scanbutton","scanbuttonText","lowerContainer","index","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","borderRadius","flexDirection","borderColor","width","height","padding","fontSize","fontFamily","borderTopRightRadius","borderBottomRightRadius","alignSelf","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  FlatList\n} from \"react-native\";\nimport { Avatar, ListItem, Icon } from \"react-native-elements\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nexport default class RideHistoryScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allTransactions: [],\n      lastVisibleTransaction: null,\n      searchText: \"\",\n      email: firebase.auth().currentUser.email\n    };\n  }\n  componentDidMount = async () => {\n    const { email } = this.state;\n    this.getTransactions(email);\n  };\n\n  getTransactions = email => {\n    db.collection(\"transactions\")\n      .where(\"email_id\", \"==\", email)\n      .limit(10)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            allTransactions: [...this.state.allTransactions, doc.data()],\n            lastVisibleTransaction: doc\n          });\n        });\n      });\n  };\n\n  handleSearch = async (bikeId, email) => {\n    bikeId = bikeId.toUpperCase().trim();\n    this.setState({\n      allTransactions: []\n    });\n    if (!bikeId) {\n      this.getTransactions(email);\n    }\n\n    db.collection(\"transactions\")\n      .where(\"bike_id\", \"==\", bikeId)\n      .where(\"email_id\", \"==\", email)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            allTransactions: [...this.state.allTransactions, doc.data()],\n            lastVisibleTransaction: doc\n          });\n        });\n      });\n  };\n\n  fetchMoreTransactions = async (bikeId, email) => {\n    bikeId = bikeId.toUpperCase().trim();\n\n    const { lastVisibleTransaction, allTransactions } = this.state;\n    const query = await db\n      .collection(\"transactions\")\n      .where(\"bike_id\", \"==\", bikeId)\n      .where(\"email_id\", \"==\", email)\n      .startAfter(lastVisibleTransaction)\n      .limit(10)\n      .get();\n    query.docs.map(doc => {\n      this.setState({\n        allTransactions: [...this.state.allTransactions, doc.data()],\n        lastVisibleTransaction: doc\n      });\n    });\n  };\n\n  renderItem = ({ item, i }) => {\n    var date = item.date\n      .toDate()\n      .toString()\n      .split(\" \")\n      .splice(0, 4)\n      .join(\" \");\n\n    var transactionType =\n      item.transaction_type === \"rented\" ? \"rented\" : \"returned\";\n    return (\n      <View style={{ borderWidth: 1 }}>\n        <ListItem key={i} bottomDivider>\n          <Icon type={\"ionicon\"} name={\"bicycle\"} size={40} />\n          <ListItem.Content>\n            <ListItem.Title style={styles.title}>\n              {`${item.bike_type} ( ${item.bike_id} )`}\n            </ListItem.Title>\n            <ListItem.Subtitle style={styles.subtitle}>\n              {`This bike is ${transactionType} by you.`}\n            </ListItem.Subtitle>\n            <View style={styles.lowerLeftContaiiner}>\n              <View style={styles.transactionContainer}>\n                <Text\n                  style={[\n                    styles.transactionText,\n                    {\n                      color:\n                        item.transaction_type === \"rented\"\n                          ? \"#78D304\"\n                          : \"#0364F4\"\n                    }\n                  ]}\n                >\n                  {item.transaction_type.charAt(0).toUpperCase() +\n                    item.transaction_type.slice(1)}\n                </Text>\n                <Icon\n                  type={\"ionicon\"}\n                  name={\n                    item.transaction_type === \"rented\"\n                      ? \"checkmark-circle-outline\"\n                      : \"arrow-redo-circle-outline\"\n                  }\n                  color={\n                    item.transaction_type === \"rented\" ? \"#78D304\" : \"#0364F4\"\n                  }\n                />\n              </View>\n              <Text style={styles.date}>{date}</Text>\n            </View>\n          </ListItem.Content>\n        </ListItem>\n      </View>\n    );\n  };\n\n  render() {\n    const { searchText, allTransactions, email } = this.state;\n    return (\n      <View style={styles.container}>\n        <View style={styles.upperContainer}>\n          <View style={styles.textinputContainer}>\n            <TextInput\n              style={styles.textinput}\n              onChangeText={text => this.setState({ searchText: text })}\n              placeholder={\"Type here\"}\n              placeholderTextColor={\"#FFFFFF\"}\n            />\n            <TouchableOpacity\n              style={styles.scanbutton}\n              onPress={() => this.handleSearch(searchText, email)}\n            >\n              <Text style={styles.scanbuttonText}>Search</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View style={styles.lowerContainer}>\n          <FlatList\n            data={allTransactions}\n            renderItem={this.renderItem}\n            keyExtractor={(item, index) => index.toString()}\n            onEndReached={() => this.fetchMoreTransactions(searchText, email)}\n            onEndReachedThreshold={0.7}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  upperContainer: {\n    flex: 0.2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#4C5D70\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#F88379\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerContainer: {\n    flex: 0.8,\n    backgroundColor: \"#FBE5C0\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  subtitle: {\n    fontSize: 16,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerLeftContaiiner: {\n    alignSelf: \"flex-end\",\n    marginTop: -40\n  },\n  transactionContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  transactionText: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  date: {\n    fontSize: 12,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 5\n  }\n});\n"]},"metadata":{},"sourceType":"module"}