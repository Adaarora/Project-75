{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar bgImage = require(\"../assets/background2.png\");\n\nvar appIcon = require(\"../assets/appIcon.png\");\n\nvar RideScreen = function (_Component) {\n  _inherits(RideScreen, _Component);\n\n  var _super = _createSuper(RideScreen);\n\n  function RideScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RideScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: \"scanner\",\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.setState({\n                bikeId: data,\n                domState: \"normal\",\n                scanned: true\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var _this$state, bikeId, userId, email, transactionType, isEligible, _this$state2, bikeType, userName, _this$state3;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, bikeId = _this$state.bikeId, userId = _this$state.userId, email = _this$state.email;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(_this.getBikeDetails(bikeId));\n\n            case 3:\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(_this.checkBikeAvailability(bikeId));\n\n            case 5:\n              transactionType = _context3.sent;\n\n              if (transactionType) {\n                _context3.next = 11;\n                break;\n              }\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n              Alert.alert(\"Kindly enter/scan valid bike id\");\n              _context3.next = 26;\n              break;\n\n            case 11:\n              if (!(transactionType === \"under_maintenance\")) {\n                _context3.next = 15;\n                break;\n              }\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n              _context3.next = 26;\n              break;\n\n            case 15:\n              if (!(transactionType === \"rented\")) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 18;\n              return _regeneratorRuntime.awrap(_this.checkUserEligibilityForStartRide(userId, email));\n\n            case 18:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state2 = _this.state, bikeType = _this$state2.bikeType, userName = _this$state2.userName;\n\n                _this.assignBike(bikeId, userId, bikeType, userName, email);\n\n                Alert.alert(\"You have rented the bike for next 1 hour. Enjoy your ride!!!\");\n\n                _this.setState({\n                  bikeAssigned: true\n                });\n              }\n\n              _context3.next = 26;\n              break;\n\n            case 22:\n              _context3.next = 24;\n              return _regeneratorRuntime.awrap(_this.checkUserEligibilityForEndRide(bikeId, userId, email));\n\n            case 24:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state3 = _this.state, bikeType = _this$state3.bikeType, userName = _this$state3.userName;\n\n                _this.returnBike(bikeId, userId, bikeType, userName, email);\n\n                Alert.alert(\"We hope you enjoyed your ride\");\n\n                _this.setState({\n                  bikeAssigned: false\n                });\n              }\n\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getBikeDetails = function (bikeId) {\n      bikeId = bikeId.trim();\n      db.collection(\"bicycles\").where(\"id\", \"==\", bikeId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            bikeType: doc.data().bike_type\n          });\n        });\n      });\n    };\n\n    _this.getUserDetails = function (email) {\n      db.collection(\"users\").where(\"email_id\", \"==\", email).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            userName: doc.data().name,\n            userId: doc.data().id,\n            bikeAssigned: doc.data().bike_assigned\n          });\n        });\n      });\n    };\n\n    _this.checkBikeAvailability = function _callee4(bikeId) {\n      var bikeRef, transactionType;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"bicycles\").where(\"id\", \"==\", bikeId).get());\n\n            case 2:\n              bikeRef = _context4.sent;\n              transactionType = \"\";\n\n              if (bikeRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bikeRef.docs.map(function (doc) {\n                  if (!doc.data().under_maintenance) {\n                    transactionType = doc.data().is_bike_available ? \"rented\" : \"return\";\n                  } else {\n                    transactionType = \"under_maintenance\";\n                    Alert.alert(doc.data().maintenance_message);\n                  }\n                });\n              }\n\n              return _context4.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkUserEligibilityForStartRide = function _callee5(userId, email) {\n      var userRef, isUserEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"users\").where(\"id\", \"==\", userId).where(\"email_id\", \"==\", email).get());\n\n            case 2:\n              userRef = _context5.sent;\n              isUserEligible = false;\n\n              if (userRef.docs.length == 0) {\n                _this.setState({\n                  bikeId: \"\"\n                });\n\n                isUserEligible = false;\n                Alert.alert(\"Invalid user id\");\n              } else {\n                userRef.docs.map(function (doc) {\n                  if (!doc.data().bike_assigned) {\n                    isUserEligible = true;\n                  } else {\n                    isUserEligible = false;\n                    Alert.alert(\"End the current ride to rent another bike.\");\n\n                    _this.setState({\n                      bikeId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isUserEligible);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkUserEligibilityForEndRide = function _callee6(bikeId, userId, email) {\n      var transactionRef, isUserEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bike_id\", \"==\", bikeId).where(\"email_id\", \"==\", email).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isUserEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBikeTransaction = doc.data();\n\n                if (lastBikeTransaction.user_id === userId) {\n                  isUserEligible = true;\n                } else {\n                  isUserEligible = false;\n                  Alert.alert(\"This bike is rented by another user\");\n\n                  _this.setState({\n                    bikeId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isUserEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.assignBike = function _callee7(bikeId, userId, bikeType, userName, email) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                user_id: userId,\n                user_name: userName,\n                bike_id: bikeId,\n                bike_type: bikeType,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"rented\",\n                email_id: email\n              });\n              db.collection(\"bicycles\").doc(bikeId).update({\n                is_bike_available: false\n              });\n              db.collection(\"users\").doc(userId).update({\n                bike_assigned: true\n              });\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.returnBike = function _callee8(bikeId, userId, bikeType, userName, email) {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                user_id: userId,\n                user_name: userName,\n                bike_id: bikeId,\n                bike_type: bikeType,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"return\",\n                email_id: email\n              });\n              db.collection(\"bicycles\").doc(bikeId).update({\n                is_bike_available: true\n              });\n              db.collection(\"users\").doc(userId).update({\n                bike_assigned: false\n              });\n\n              _this.setState({\n                bikeId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      bikeId: \"\",\n      userId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bikeType: \"\",\n      userName: \"\",\n      email: firebase.auth().currentUser\n    };\n    return _this;\n  }\n\n  _createClass(RideScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var email;\n      return _regeneratorRuntime.async(function componentDidMount$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              email = this.state.email;\n              _context9.next = 3;\n              return _regeneratorRuntime.awrap(this.getUserDetails(email));\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          bikeId = _this$state4.bikeId,\n          userId = _this$state4.userId,\n          domState = _this$state4.domState,\n          scanned = _this$state4.scanned,\n          bikeAssigned = _this$state4.bikeAssigned;\n\n      if (domState !== \"normal\") {\n        return _jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      }\n\n      return _jsxs(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.upperContainer,\n          children: [_jsx(Image, {\n            source: appIcon,\n            style: styles.appIcon\n          }), _jsx(Text, {\n            style: styles.title,\n            children: \"e-ride\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"A Eco-Friendly Ride\"\n          })]\n        }), _jsxs(View, {\n          style: styles.lowerContainer,\n          children: [_jsx(View, {\n            style: styles.textinputContainer,\n            children: _jsx(TextInput, {\n              style: [styles.textinput, {\n                width: \"82%\"\n              }],\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  userId: text\n                });\n              },\n              placeholder: \"User Id\",\n              placeholderTextColor: \"#FFFFFF\",\n              value: userId\n            })\n          }), _jsxs(View, {\n            style: [styles.textinputContainer, {\n              marginTop: 25\n            }],\n            children: [_jsx(TextInput, {\n              style: styles.textinput,\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  bikeId: text\n                });\n              },\n              placeholder: \"Bicycle Id\",\n              placeholderTextColor: \"#FFFFFF\",\n              value: bikeId,\n              autoFocus: true\n            }), _jsx(TouchableOpacity, {\n              style: styles.scanbutton,\n              onPress: function onPress() {\n                return _this2.getCameraPermissions();\n              },\n              children: _jsx(Text, {\n                style: styles.scanbuttonText,\n                children: \"Scan\"\n              })\n            })]\n          }), _jsx(TouchableOpacity, {\n            style: [styles.button, {\n              marginTop: 25\n            }],\n            onPress: this.handleTransaction,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: bikeAssigned ? \"End Ride\" : \"Unlock\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return RideScreen;\n}(Component);\n\nexport { RideScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 20,\n    color: \"#4C5D70\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#4C5D70\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#4C5D70\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#F88379\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"#4C5D70\"\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/adaar/OneDrive/Desktop/White Hat Junior/Project-75/screens/Ride.js"],"names":["React","Component","Permissions","BarCodeScanner","firebase","db","bgImage","require","appIcon","RideScreen","props","getCameraPermissions","askAsync","CAMERA","status","setState","hasCameraPermissions","domState","scanned","handleBarCodeScanned","type","data","bikeId","handleTransaction","state","userId","email","getBikeDetails","checkBikeAvailability","transactionType","Alert","alert","checkUserEligibilityForStartRide","isEligible","bikeType","userName","assignBike","bikeAssigned","checkUserEligibilityForEndRide","returnBike","trim","collection","where","get","then","snapshot","docs","map","doc","bike_type","getUserDetails","name","id","bike_assigned","bikeRef","length","under_maintenance","is_bike_available","maintenance_message","userRef","isUserEligible","limit","transactionRef","lastBikeTransaction","user_id","add","user_name","bike_id","date","firestore","Timestamp","now","toDate","transaction_type","email_id","update","auth","currentUser","undefined","StyleSheet","absoluteFillObject","styles","container","upperContainer","title","subtitle","lowerContainer","textinputContainer","textinput","width","text","marginTop","scanbutton","scanbuttonText","button","buttonText","create","flex","backgroundColor","resizeMode","justifyContent","alignItems","height","fontSize","fontFamily","paddingTop","color","borderWidth","borderRadius","flexDirection","borderColor","padding","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  ImageBackground,\n  Image,\n  Alert,\n  KeyboardAvoidingView\n} from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nconst bgImage = require(\"../assets/background2.png\");\nconst appIcon = require(\"../assets/appIcon.png\");\n\nexport default class RideScreen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bikeId: \"\",\n      userId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bikeType: \"\",\n      userName: \"\",\n      //email: firebase.auth()\n      //email: firebase.auth().email\n      //email: firebase.auth().currentUser.email\n      email: firebase.auth().currentUser\n    };\n  }\n\n  async componentDidMount() {\n    const { email } = this.state;\n    await this.getUserDetails(email);\n  }\n\n  getCameraPermissions = async () => {\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n      hasCameraPermissions: status === \"granted\",\n      domState: \"scanner\",\n      scanned: false\n    });\n  };\n\n  handleBarCodeScanned = async ({ type, data }) => {\n    this.setState({\n      bikeId: data,\n      domState: \"normal\",\n      scanned: true\n    });\n  };\n\n  handleTransaction = async () => {\n    var { bikeId, userId, email } = this.state;\n    await this.getBikeDetails(bikeId);\n\n    var transactionType = await this.checkBikeAvailability(bikeId);\n\n    if (!transactionType) {\n      this.setState({ bikeId: \"\" });\n      Alert.alert(\"Kindly enter/scan valid bike id\");\n    } else if (transactionType === \"under_maintenance\") {\n      this.setState({\n        bikeId: \"\"\n      });\n    } else if (transactionType === \"rented\") {\n      var isEligible = await this.checkUserEligibilityForStartRide(\n        userId,\n        email\n      );\n\n      if (isEligible) {\n        var { bikeType, userName } = this.state;\n        this.assignBike(bikeId, userId, bikeType, userName, email);\n        Alert.alert(\n          \"You have rented the bike for next 1 hour. Enjoy your ride!!!\"\n        );\n        this.setState({\n          bikeAssigned: true\n        });\n\n        // For Android users only\n        // ToastAndroid.show(\n        //   \"You have rented the bike for next 1 hour. Enjoy your ride!!!\",\n        //   ToastAndroid.SHORT\n        // );\n      }\n    } else {\n      var isEligible = await this.checkUserEligibilityForEndRide(\n        bikeId,\n        userId,\n        email\n      );\n\n      if (isEligible) {\n        var { bikeType, userName } = this.state;\n        this.returnBike(bikeId, userId, bikeType, userName, email);\n        Alert.alert(\"We hope you enjoyed your ride\");\n        this.setState({\n          bikeAssigned: false\n        });\n\n        // For Android users only\n        // ToastAndroid.show(\n        //   \"We hope you enjoyed your ride\",\n        //   ToastAndroid.SHORT\n        // );\n      }\n    }\n  };\n\n  getBikeDetails = bikeId => {\n    bikeId = bikeId.trim();\n    db.collection(\"bicycles\")\n      .where(\"id\", \"==\", bikeId)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            bikeType: doc.data().bike_type\n          });\n        });\n      });\n  };\n\n  getUserDetails = email => {\n    db.collection(\"users\")\n      .where(\"email_id\", \"==\", email)\n      .get()\n      .then(snapshot => {\n        snapshot.docs.map(doc => {\n          this.setState({\n            userName: doc.data().name,\n            userId: doc.data().id,\n            bikeAssigned: doc.data().bike_assigned\n          });\n        });\n      });\n  };\n\n  checkBikeAvailability = async bikeId => {\n    const bikeRef = await db\n      .collection(\"bicycles\")\n      .where(\"id\", \"==\", bikeId)\n      .get();\n\n    var transactionType = \"\";\n    if (bikeRef.docs.length == 0) {\n      transactionType = false;\n    } else {\n      bikeRef.docs.map(doc => {\n        if (!doc.data().under_maintenance) {\n          //if the bike is available then transaction type will be rented\n          // otherwise it will be return\n          transactionType = doc.data().is_bike_available ? \"rented\" : \"return\";\n        } else {\n          transactionType = \"under_maintenance\";\n          Alert.alert(doc.data().maintenance_message);\n        }\n      });\n    }\n\n    return transactionType;\n  };\n\n  checkUserEligibilityForStartRide = async (userId, email) => {\n    const userRef = await db\n      .collection(\"users\")\n      .where(\"id\", \"==\", userId)\n      .where(\"email_id\", \"==\", email)\n      .get();\n\n    var isUserEligible = false;\n    if (userRef.docs.length == 0) {\n      this.setState({\n        bikeId: \"\"\n      });\n      isUserEligible = false;\n      Alert.alert(\"Invalid user id\");\n    } else {\n      userRef.docs.map(doc => {\n        if (!doc.data().bike_assigned) {\n          isUserEligible = true;\n        } else {\n          isUserEligible = false;\n          Alert.alert(\"End the current ride to rent another bike.\");\n          this.setState({\n            bikeId: \"\"\n          });\n        }\n      });\n    }\n\n    return isUserEligible;\n  };\n\n  checkUserEligibilityForEndRide = async (bikeId, userId, email) => {\n    const transactionRef = await db\n      .collection(\"transactions\")\n      .where(\"bike_id\", \"==\", bikeId)\n      .where(\"email_id\", \"==\", email)\n      .limit(1)\n      .get();\n    var isUserEligible = \"\";\n    transactionRef.docs.map(doc => {\n      var lastBikeTransaction = doc.data();\n      if (lastBikeTransaction.user_id === userId) {\n        isUserEligible = true;\n      } else {\n        isUserEligible = false;\n        Alert.alert(\"This bike is rented by another user\");\n        this.setState({\n          bikeId: \"\"\n        });\n      }\n    });\n    return isUserEligible;\n  };\n\n  assignBike = async (bikeId, userId, bikeType, userName, email) => {\n    //add a transaction\n    db.collection(\"transactions\").add({\n      user_id: userId,\n      user_name: userName,\n      bike_id: bikeId,\n      bike_type: bikeType,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transaction_type: \"rented\",\n      email_id: email\n    });\n    //change bike status\n    db.collection(\"bicycles\")\n      .doc(bikeId)\n      .update({\n        is_bike_available: false\n      });\n    //change value  of bike assigned for user\n    db.collection(\"users\")\n      .doc(userId)\n      .update({\n        bike_assigned: true\n      });\n\n    // Updating local state\n    this.setState({\n      bikeId: \"\"\n    });\n  };\n\n  returnBike = async (bikeId, userId, bikeType, userName, email) => {\n    //add a transaction\n    db.collection(\"transactions\").add({\n      user_id: userId,\n      user_name: userName,\n      bike_id: bikeId,\n      bike_type: bikeType,\n      date: firebase.firestore.Timestamp.now().toDate(),\n      transaction_type: \"return\",\n      email_id: email\n    });\n    //change bike status\n    db.collection(\"bicycles\")\n      .doc(bikeId)\n      .update({\n        is_bike_available: true\n      });\n    //change value  of bike assigned for user\n    db.collection(\"users\")\n      .doc(userId)\n      .update({\n        bike_assigned: false\n      });\n\n    // Updating local state\n    this.setState({\n      bikeId: \"\"\n    });\n  };\n\n  render() {\n    const { bikeId, userId, domState, scanned, bikeAssigned } = this.state;\n    if (domState !== \"normal\") {\n      return (\n        <BarCodeScanner\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n        />\n      );\n    }\n    return (\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <View style={styles.upperContainer}>\n          <Image source={appIcon} style={styles.appIcon} />\n          <Text style={styles.title}>e-ride</Text>\n          <Text style={styles.subtitle}>A Eco-Friendly Ride</Text>\n        </View>\n        <View style={styles.lowerContainer}>\n          <View style={styles.textinputContainer}>\n            <TextInput\n              style={[styles.textinput, { width: \"82%\" }]}\n              onChangeText={text => this.setState({ userId: text })}\n              placeholder={\"User Id\"}\n              placeholderTextColor={\"#FFFFFF\"}\n              value={userId}\n            />\n          </View>\n          <View style={[styles.textinputContainer, { marginTop: 25 }]}>\n            <TextInput\n              style={styles.textinput}\n              onChangeText={text => this.setState({ bikeId: text })}\n              placeholder={\"Bicycle Id\"}\n              placeholderTextColor={\"#FFFFFF\"}\n              value={bikeId}\n              autoFocus\n            />\n            <TouchableOpacity\n              style={styles.scanbutton}\n              onPress={() => this.getCameraPermissions()}\n            >\n              <Text style={styles.scanbuttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity\n            style={[styles.button, { marginTop: 25 }]}\n            onPress={this.handleTransaction}\n          >\n            <Text style={styles.buttonText}>\n              {bikeAssigned ? \"End Ride\" : \"Unlock\"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#D0E6F0\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 20,\n    color: \"#4C5D70\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#4C5D70\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#4C5D70\",\n    borderColor: \"#4C5D70\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#4C5D70\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#F88379\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#FBE5C0\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#FBE5C0\",\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"#4C5D70\"\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#4C5D70\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}